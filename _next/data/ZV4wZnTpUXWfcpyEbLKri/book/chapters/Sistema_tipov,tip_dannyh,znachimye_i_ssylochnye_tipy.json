{"pageProps":{"urlResolver":{"image":"https://raw.githubusercontent.com/nauchikus/typescript-definitive-guide/master/book/ru/chapters/002.(Экскурс в типизацию) Система типов, тип данных, значимые и ссылочные типы/images/"},"sectionInfoAll":[{"key":"Система типов, тип данных, значимые и ссылочные типы","elementId":"Sistema_tipov,tip_dannyh,znachimye_i_ssylochnye_tipy","markdown":"# Система типов, тип данных, значимые и ссылочные типы\n\nПредставьте, что вы находитесь в центре пустыни Невады и вокруг вас на максимальной скорости хаотично разъезжают сотни ревущих бульдозеров за рулем которых сидят макаки с завязанными глазами. Кажется, что дожить до момента когда у них закончится топливо практически не реально. Подобный пример максимально близко описывает отсутствие типизации. Противоположностью является продуманная дорожная инфраструктура состоящая не только из самих дорог, но и подземных\\наземных переходов, светофоров и регулировщиков. Ключевым моментом является понимание, что ваша безопасность достигается путем _ограничения_ транспорта. Другими словами типизация сопоставимая с дорожной инфраструктурой ограничивает возможности разработчика таким образом, что процесс создания программ становится для него более комфортным. Типизация не расширяет возможности разработчиков, она их ограничивает, пуская их энергию в правильное русло.\n\nВ зависимости от среды выполнения, операции над данными могут быть ограничены некими правилами. Для каждого конкретного вида данных декларируются конкретные правила. В роли конкретного свода правил выступает тип данных.\n\nСреда выполнения, в которой отсутствует классификация данных и ограничения на операции над ними, не имеет типов, поэтому такую среду выполнения справедливо называть нетипизированной. И наоборот, среду выполнения, которая классифицирует данные и операции над ними, справедливо называть типизированной.\n\nВ основе любой типизированной среды выполнения лежит такое фундаментальное понятие, как _система типов_. Сложно сформулировать исчерпывающие определение термину _система типов_, затронув все аспекты, все значения, которые вкладывают в этот термин разработчики из различных областей, поэтому конкретизируем его самым простым определением."},{"key":"Система типов, тип данных, значимые и ссылочные типы_0","elementId":"Sistema_Tipov","markdown":"## Система Типов\n\n_Система Типов_ — это совокупность правил назначающих конструкциям составляющим программу свойства (имеется ввиду характеристики) именуемые _типами_. Обычно к конструкциям нуждающимся в аннотации типов относятся переменные, поля и свойства объектов, а также параметры и возвращаемые функциями значения.\n\nВ основе системы типов любого языка программирования всегда лежит _базисная система типов_ встроенных в язык. К базисным или встроенным типам относятся такие типы, как `byte`, `int`, `string`, `boolean`, `object` и им подобные. На их основе среда выполнения или разработчик могут определять типы данных более высокого уровня, например `Date` или `Array`."},{"key":"Система типов, тип данных, значимые и ссылочные типы_1","elementId":"Tip_dannyh_(tip)","markdown":"## Тип данных (тип)\n\n\nПонятие _тип_ является фундаментальным в теории программирования. Тип данных (или просто тип) — это характеристика определяющая множество значений и операций, которые могут быть выполнены над этими данными.\n\nВ зависимости от языка программирования, тип данных может хранить информацию о данных, к которым относятся поля, свойства, методы и другие структуры языка, а также о том, в каком месте, в _стеке_ (_stack_) или _куче_ (_heap_) будет выделяться память во время выполнения программы и её объем; в каких операциях (как, например, сложение `+`, умножение `*`, присваивание `=` и т.д.) может участвовать тип данных.\n\nТипы данных делятся на два вида:\n \n - _типы значения_ (_value type_) — хранят значение (их ещё называют _значимыми типами_)\n - _ссылочные типы_ (_reference types_) — хранят ссылку на значение\n\nПри операции присваивания значения принадлежащего к значимому типу данные копируются (дублируются) в памяти. При операции присваивания значения, принадлежащему к ссылочным типам, копируется лишь ссылка на данные."},{"key":"Система типов, тип данных, значимые и ссылочные типы_2","elementId":"Tip_dannyh,peredaushchiisya_po_znacheniu_(primitivnyi_tip)","markdown":"## Тип данных, передающийся по значению (примитивный тип)\n\nКогда переменная, ассоциированная со значением принадлежащим к значимому типу участвует в операции присвоения, операнд из левой части будет ассоциирован не со значением правого операнда, а с его копией. Другими словами, значение будет дублировано в памяти и переменные будут ассоциированы с разными значениями-участками памяти. При изменении любой переменной своего значения, значения других переменных затронуты не будут.\n\n![](./images/type-conversion-value-type.png)  \n\nОбычно говорят, что переменные с типом значения хранят значение и передаются по значению."},{"key":"Система типов, тип данных, значимые и ссылочные типы_3","elementId":"Tip_dannyh,peredaushchiisya_po_ssylke","markdown":"## Тип данных, передающийся по ссылке\n\nЕсли переменная ассоциированная со ссылочным типом данных участвует в операции присваивания, операнду из левой части будет присвоена ссылка на значение, с которым ассоциирован операнд из правой части. Другими словами обе переменные будут ассоциированы с одним и тем же значением и участком памяти. В таком случае, если изменить значение любой ссылочной переменной, изменения затронут все переменные, ассоциированные с этим значением.\n\n![](./images/type-conversion-ref-type.png) \n\nОбычно говорят, что переменные ссылочного типа ссылаются на значение и передаются по ссылке."}],"githubFileInfo":{"lastUpdate":1616326333000,"contributorAll":[{"name":"Bohdan Petrov","avatar":"https://avatars.githubusercontent.com/u/35348648?v=4","bio":"Front-end developer","githubUrl":"https://github.com/mindyourlifeguide"},{"name":"nauchikus","avatar":"https://avatars.githubusercontent.com/u/31518738?v=4","bio":"@TechnoFanatic(\"🍬\")\r\n","githubUrl":"https://github.com/nauchikus"}]},"pageNav":{"isPrevPage":true,"isNextPage":true,"prevPage":{"title":"Вступление","path":"Vstuplenie"},"nextPage":{"title":"Связывание, типизация, вывод типов","path":"Svyazyvanie,tipizaciya,vyvod_tipov"}},"contentNavData":{"key":"Система типов, тип данных, значимые и ссылочные типы","level":0,"index":2,"contentIndex":0,"section":"Экскурс в типизацию","title":"Система типов, тип данных, значимые и ссылочные типы","path":"Sistema_tipov,tip_dannyh,znachimye_i_ssylochnye_tipy","elementId":"Sistema_tipov,tip_dannyh,znachimye_i_ssylochnye_tipy","children":[{"key":"Система типов, тип данных, значимые и ссылочные типы_0","index":0,"contentIndex":1,"level":1,"section":"Экскурс в типизацию","title":"Система Типов","path":"Sistema_Tipov","elementId":"Sistema_Tipov"},{"key":"Система типов, тип данных, значимые и ссылочные типы_1","index":1,"contentIndex":2,"level":1,"section":"Экскурс в типизацию","title":"Тип данных (тип)","path":"Tip_dannyh_(tip)","elementId":"Tip_dannyh_(tip)"},{"key":"Система типов, тип данных, значимые и ссылочные типы_2","index":2,"contentIndex":3,"level":1,"section":"Экскурс в типизацию","title":"Тип данных, передающийся по значению (примитивный тип)","path":"Tip_dannyh,peredaushchiisya_po_znacheniu_(primitivnyi_tip)","elementId":"Tip_dannyh,peredaushchiisya_po_znacheniu_(primitivnyi_tip)"},{"key":"Система типов, тип данных, значимые и ссылочные типы_3","index":3,"contentIndex":4,"level":1,"section":"Экскурс в типизацию","title":"Тип данных, передающийся по ссылке","path":"Tip_dannyh,peredaushchiisya_po_ssylke","elementId":"Tip_dannyh,peredaushchiisya_po_ssylke"}]},"pageDescription":"Система типов, тип данных, значимые и ссылочные типы"},"__N_SSG":true}